اسم.: بناء ماجيسك.

على.:
 دفع. :
 الفروع. : [سيد.]
 مسارات. :
 - "التطبيق/**"
 - "أصلي/**"
 - "كعب/**"
 - "بناء سيرك/**"
 - "build.py"
 - "Gradle.Properties"
 - ..github/workflows/build.yml..github/workflows/build.yml"
 سحب_طلب. :
  الفروع.: [سيد.  ]
 Workflow_dispatch. :

وظائف.:
 بناء. :
 اسم. : بناء القطع الأثرية ماجيسك
 يعمل على. : أوبونتو-أحدث.
 ENV. :
 Sccache_direct. : كاذبة.
 الاستراتيجية. :
 فشل سريع. : كاذبة.
 خطوات. :
      - name: تحقق من.
        uses: الإجراءات/الخروج @v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: بيئة الإعداد.
        uses: ./.github/أفعال/إعداد

      - name: بناء الافراج.
        run: ./build.py -vr all

      - name: Build debug
        run: ./build.py -v all

      - name: Stop gradle daemon
        run: ./gradlew --stop

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.sha }}
          path: out
          compression-level: 9

      - name: Upload mapping and native debug symbols
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.sha }}-symbols
          path: app/build/outputs
          compression-level: 9

  test-build:
    name: Test building on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      SCCACHE_DIRECT: false
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-14]
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          submodules: "recursive"
          fetch-depth: 0

      - name: Setup environment
        uses: ./.github/actions/setup

      - name: Build debug
        run: python build.py -v all

      - name: Stop gradle daemon
        run: ./gradlew --stop

  test:
    name: Test x86_64 on API ${{ matrix.version }}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        version: [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34]
        type: [""]
        include:
          - version: 35
            type: "google_apis"

    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.sha }}
          path: out

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: AVD test
        env:
          AVD_TEST_VERBOSE: 1
        run: scripts/avd_test.sh ${{ matrix.version }} ${{ matrix.type }}

  test-32:
    name: Test x86 on API ${{ matrix.version }}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: false
      matrix:
        version: [23, 24, 25, 26, 27, 28, 29, 30]

    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.sha }}
          path: out

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: AVD test
        env:
          FORCE_32_BIT: 1
          AVD_TEST_VERBOSE: 1
        run: scripts/avd_test.sh ${{ matrix.version }}
